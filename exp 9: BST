#include <stdio.h>
#include<stdlib.h>
#include<ctype.h>

struct node{
    int data;
    struct node* left, *right;
};


struct node* create(int data) {
    struct node* newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data = data;
    newnode->left = NULL;
    newnode->right = NULL;
    return newnode;
}

struct node * insert(struct node * root, int data){
    if (root==NULL){
        return create(data);
    }
    if(data<root->data){
            root->left=insert(root->left,data);
    }
    else{
        root->right=insert(root->right,data);
    }
    return root;
}

void  inorder(struct node* root){
    if(root!=NULL){
        inorder(root->left);
        printf("%d  ", root->data);
        inorder(root->right);
    }
}

void preorder(struct node* root){
    if (root!=NULL){
        printf("%d  ", root->data);
        preorder(root->left);
        preorder(root->right);
    }
}

void postorder(struct node*root){
    if (root!=NULL){
        postorder(root->left);
        postorder(root->right);
        printf("%d  ",root->data);}
}

struct node* delete(struct node* root ,int data){
    if(data==root->data){
        delete(root,root->data);
    }
    return root;
}
int main() {
    struct node * root=NULL;
    int choice, value;
     printf("chose a function for your BST:\n1. Insert\n2. Inorder Traversal\n3. Preorder Traversal\n4. Postorder Traversal\n5. Delete node\n6. Exit\n");
        while (1) {
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                root = insert(root, value);
                break;
            case 2:
                printf("Inorder Traversal: ");
                inorder(root);
                printf("\n");
                break;
            case 3:
                printf("Preorder Traversal: ");
                preorder(root);
                printf("\n");
                break;
            case 4:
                printf("Postorder Traversal: ");
                postorder(root);
                printf("\n");
                break;
            case 5:
             printf("Enter value to delete: ");
                scanf("%d", &value);
                root = delete(root, value);
                break;
            case 6:
                exit(0);
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}
